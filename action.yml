name: 'Deploy APK to Zap.Store'
description: 'This action deploys the latest release of your APK to the Zap.Store'
inputs:
  app_name:
    description: 'App name'
    required: true
  nsec:
    description: 'NSEC of the nostr account signing the release.'
    required: true
  api_version:
    description: 'Android API version'
    required: true
    default: '34'
  build_tools_version:
    description: 'Android build-tools version'
    required: true
    default: '34.0.0'
outputs:
  example_output:
    description: 'An example output from the action.'
    value: 'output value'
runs:
  using: 'composite'
  steps:
    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1.6.5

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: 'platforms;android-${{ inputs.api_version }} build-tools;${{ inputs.build_tools_version }}'

    - name: Verify apksigner
      run: $ANDROID_SDK_ROOT/build-tools/${{ inputs.build_tools_version }}/apksigner --version

    - name: Install Apktool
      run: |
        wget "https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool"
        wget "https://github.com/iBotPeaches/Apktool/releases/download/v2.10.0/apktool_2.10.0.jar"
        mv apktool_2.10.0.jar apktool.jar
        sudo cp apktool /usr/local/bin
        sudo cp apktool.jar /usr/local/bin
        sudo chmod +x /usr/local/bin/apktool
        sudo chmod +x /usr/local/bin/apktool.jar

    - name: Verify Apktool Installation
      run: apktool --version

    - name: Get Zap.Store latest release
      id: get-zap-store-release
      run: |
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/zapstore/zapstore-cli/releases/latest)
        TAG_NAME=$(echo $LATEST_RELEASE | jq -r .tag_name)
        echo "Latest release tag: $TAG_NAME"
        echo "::set-output name=zapstore_version::$TAG_NAME"

    - name: Publish to Zap.Store
      id: publish-zap-store
      env:
        NSEC: ${{ inputs.nsec }}
      run: |
        mkdir /home/runner/.zapstore
        git clone https://github.com/zapstore/zapstore-cli.git
        cd zapstore-cli
        git fetch --tags
        git checkout ${{ steps.get-zap-store-release.outputs.zapstore_version }}
        dart pub get
        dart compile exe lib/main.dart -o build
        cd $GITHUB_WORKSPACE
        APKSIGNER_PATH=$ANDROID_SDK_ROOT/build-tools/${{ inputs.build_tools_version }}/apksigner ./zapstore-cli/build publish ${{ inputs.app_name }}
